<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

   <entry key="loginMember">
SELECT 
    M.MEM_NO,
    M.MEM_ID,
    M.MEM_PWD,
    M.MEM_NAME,
    M.EMAIL,
    M.NICKNAME,
    M.PHONE,
    M.ENROLL_DATE,
    M.STATUS,
    M.AGREE_YN,
    M.GENDER,
    M.TOKEN,
    NVL(F1.FOLLOWING_CNT, 0) AS FOLLOWING_COUNT,
    NVL(F2.FOLLOWER_CNT, 0) AS FOLLOWER_COUNT,
    NVL(R.REVIEW_CNT, 0) AS REVIEW_COUNT,
    NVL(P.POST_CNT, 0) AS POST_COUNT,
    IMG.FILE_PATH || CHANGE_NAME AS PROFILE_IMAGE_PATH

FROM MEMBER M

LEFT JOIN (SELECT FOLLOWING, COUNT(*) AS FOLLOWING_CNT FROM FOLLOW GROUP BY FOLLOWING) F1 
    ON M.MEM_NO = F1.FOLLOWING

LEFT JOIN (SELECT FOLLOWER, COUNT(*) AS FOLLOWER_CNT FROM FOLLOW GROUP BY FOLLOWER) F2
    ON M.MEM_NO = F2.FOLLOWER

LEFT JOIN (SELECT MEM_NO, COUNT(*) AS REVIEW_CNT FROM REVIEW GROUP BY MEM_NO) R
    ON M.MEM_NO = R.MEM_NO

LEFT JOIN (SELECT MEM_NO, COUNT(*) AS POST_CNT FROM POST GROUP BY MEM_NO) P
    ON M.MEM_NO = P.MEM_NO

LEFT JOIN (
    SELECT * FROM (
        SELECT IMG.*, ROW_NUMBER() OVER (PARTITION BY REF_BNO ORDER BY UPLOAD_DATE DESC) AS RN
        FROM IMAGE IMG
        WHERE IMG.FILE_LEVEL = 'P' AND IMG.STATUS = 'Y'
    ) WHERE RN = 1
) IMG ON TO_CHAR(M.MEM_NO) = IMG.REF_BNO 

WHERE M.MEM_ID = ? AND M.MEM_PWD = ?

   </entry>
   
   <entry key="insertMember">
         INSERT
        INTO MEMBER
       (
          MEM_NO
        , MEM_ID
        , MEM_PWD
        , MEM_NAME
        , EMAIL
        , NICKNAME
        , PHONE
        , AGREE_YN
        , GENDER
        , TOKEN
       )
       VALUES
       (
         SEQ_MEM.NEXTVAL
       , ?
       , ?
       , ?
       , ?
       , ?
       , ?
       , ?
       , ?
       , ?
       )
   </entry>
   
   <entry key="deleteMember">
          UPDATE MEMBER
             SET STATUS = 'N'
           WHERE MEM_ID = ?
             AND MEM_PWD = ?
   </entry>

	<entry key="kakaoCheckUser">
		SELECT
		       COUNT(*) "COUNT"
		  FROM MEMBER
		 WHERE TOKEN = ?
	</entry>
	
	<entry key="kakaoLoginMember">
SELECT 
    M.MEM_NO,
    M.MEM_ID,
    M.MEM_PWD,
    M.MEM_NAME,
    M.EMAIL,
    M.NICKNAME,
    M.PHONE,
    M.ENROLL_DATE,
    M.STATUS,
    M.AGREE_YN,
    M.GENDER,
    M.TOKEN,
    NVL(F1.FOLLOWING_CNT, 0) AS FOLLOWING_COUNT,
    NVL(F2.FOLLOWER_CNT, 0) AS FOLLOWER_COUNT,
    NVL(R.REVIEW_CNT, 0) AS REVIEW_COUNT,
    NVL(P.POST_CNT, 0) AS POST_COUNT,
    IMG.FILE_PATH || CHANGE_NAME AS PROFILE_IMAGE_PATH

FROM MEMBER M

LEFT JOIN (SELECT FOLLOWING, COUNT(*) AS FOLLOWING_CNT FROM FOLLOW GROUP BY FOLLOWING) F1 
    ON M.MEM_NO = F1.FOLLOWING

LEFT JOIN (SELECT FOLLOWER, COUNT(*) AS FOLLOWER_CNT FROM FOLLOW GROUP BY FOLLOWER) F2
    ON M.MEM_NO = F2.FOLLOWER

LEFT JOIN (SELECT MEM_NO, COUNT(*) AS REVIEW_CNT FROM REVIEW GROUP BY MEM_NO) R
    ON M.MEM_NO = R.MEM_NO

LEFT JOIN (SELECT MEM_NO, COUNT(*) AS POST_CNT FROM POST GROUP BY MEM_NO) P
    ON M.MEM_NO = P.MEM_NO

LEFT JOIN IMAGE IMG ON TO_CHAR(M.MEM_NO) = IMG.REF_BNO 
    AND IMG.FILE_LEVEL = 'P' 
    AND IMG.STATUS = 'Y'

WHERE M.TOKEN = ?  AND M.STATUS = 'Y'
	</entry>
   
      <entry key="NaverCheckUser">
      SELECT
             COUNT(*) "COUNT"
        FROM MEMBER
       WHERE Token = ?
      </entry>
      
      <entry key="NaverLoginMember">
SELECT 
    M.MEM_NO,
    M.MEM_ID,
    M.MEM_PWD,
    M.MEM_NAME,
    M.EMAIL,
    M.NICKNAME,
    M.PHONE,
    M.GENDER,
    M.TOKEN,
    NVL(F1.FOLLOWING_CNT, 0) AS FOLLOWING_COUNT,
    NVL(F2.FOLLOWER_CNT, 0) AS FOLLOWER_COUNT,
    NVL(R.REVIEW_CNT, 0) AS REVIEW_COUNT,
    NVL(P.POST_CNT, 0) AS POST_COUNT,
    IMG.FILE_PATH || IMG.CHANGE_NAME AS PROFILE_IMAGE_PATH,
    BP.BF_NO,
    BP.ST_NO AS SKIN_TYPE,
    BP.BT_NO AS BODY_TYPE,
    BP.SCALP_NO AS SCALP_TYPE,
    BP.HT_NO AS HAIR_TYPE,
    BP.SIM_LIST,
    BP.HIM_LIST,
    BP.BRANDLIST,
    BP.RELEASE AS MARKETING_AGREE,
    BP.COLOR AS PERSONAL_COLOR

FROM MEMBER M

LEFT JOIN (SELECT FOLLOWING, COUNT(*) AS FOLLOWING_CNT FROM FOLLOW GROUP BY FOLLOWING) F1 
    ON M.MEM_NO = F1.FOLLOWING

LEFT JOIN (SELECT FOLLOWER, COUNT(*) AS FOLLOWER_CNT FROM FOLLOW GROUP BY FOLLOWER) F2
    ON M.MEM_NO = F2.FOLLOWER

LEFT JOIN (SELECT MEM_NO, COUNT(*) AS REVIEW_CNT FROM REVIEW GROUP BY MEM_NO) R
    ON M.MEM_NO = R.MEM_NO

LEFT JOIN (SELECT MEM_NO, COUNT(*) AS POST_CNT FROM POST GROUP BY MEM_NO) P
    ON M.MEM_NO = P.MEM_NO

LEFT JOIN (
    SELECT * FROM (
        SELECT IMG.*, ROW_NUMBER() OVER (PARTITION BY REF_BNO ORDER BY UPLOAD_DATE DESC) AS RN
        FROM IMAGE IMG
        WHERE IMG.FILE_LEVEL = 'P' AND IMG.STATUS = 'Y'
    ) WHERE RN = 1
) IMG ON TO_CHAR(M.MEM_NO) = IMG.REF_BNO 

LEFT JOIN BEAUTY_PROFILE BP 
    ON M.MEM_NO = BP.MEM_NO 

WHERE M.TOKEN = ?  
AND M.STATUS = 'Y'
   </entry>
   
   <entry key="updateMember">
   		UPDATE MEMBER
         SET MEM_NAME = ?
              , MEM_ID = ?
              , MEM_PWD = ?
              , EMAIL = ?
              , NICKNAME = ?
              , PHONE = ?
       WHERE MEM_NO = ?
   </entry>
   
   <entry key="selectMember">
       SELECT 
    M.MEM_NO,
    M.MEM_ID,
    M.MEM_PWD,
    M.MEM_NAME,
    M.EMAIL,
    M.NICKNAME,
    M.PHONE,
    M.GENDER,
    M.TOKEN,
    NVL(F1.FOLLOWING_CNT, 0) AS FOLLOWING_COUNT,
    NVL(F2.FOLLOWER_CNT, 0) AS FOLLOWER_COUNT,
    NVL(R.REVIEW_CNT, 0) AS REVIEW_COUNT,
    NVL(P.POST_CNT, 0) AS POST_COUNT,
    IMG.FILE_PATH || IMG.CHANGE_NAME AS PROFILE_IMAGE_PATH,
    BP.BF_NO,
    BP.ST_NO AS SKIN_TYPE,
    BP.BT_NO AS BODY_TYPE,
    BP.SCALP_NO AS SCALP_TYPE,
    BP.HT_NO AS HAIR_TYPE,
    BP.SIM_LIST,
    BP.HIM_LIST,
    BP.BRANDLIST,
    BP.RELEASE AS MARKETING_AGREE,
    BP.COLOR AS PERSONAL_COLOR

FROM MEMBER M

LEFT JOIN (SELECT FOLLOWING, COUNT(*) AS FOLLOWING_CNT FROM FOLLOW GROUP BY FOLLOWING) F1 
    ON M.MEM_NO = F1.FOLLOWING

LEFT JOIN (SELECT FOLLOWER, COUNT(*) AS FOLLOWER_CNT FROM FOLLOW GROUP BY FOLLOWER) F2
    ON M.MEM_NO = F2.FOLLOWER

LEFT JOIN (SELECT MEM_NO, COUNT(*) AS REVIEW_CNT FROM REVIEW GROUP BY MEM_NO) R
    ON M.MEM_NO = R.MEM_NO

LEFT JOIN (SELECT MEM_NO, COUNT(*) AS POST_CNT FROM POST GROUP BY MEM_NO) P
    ON M.MEM_NO = P.MEM_NO

LEFT JOIN (
    SELECT * FROM (
        SELECT IMG.*, ROW_NUMBER() OVER (PARTITION BY REF_BNO ORDER BY UPLOAD_DATE DESC) AS RN
        FROM IMAGE IMG
        WHERE IMG.FILE_LEVEL = 'P' AND IMG.STATUS = 'Y'
    ) WHERE RN = 1
) IMG ON TO_CHAR(M.MEM_NO) = IMG.REF_BNO 

LEFT JOIN BEAUTY_PROFILE BP 
    ON M.MEM_NO = BP.MEM_NO 

WHERE M.MEM_NO = ?  
AND M.STATUS = 'Y'
   </entry>
   
   <entry key="idCheck">
	   	SELECT count(*) "COUNT"
	      FROM MEMBER
	      WHERE MEM_ID = ?
   </entry>
   

	 
<entry key="followList">
SELECT 
    M.NICKNAME, 
    I.FILE_PATH || I.CHANGE_NAME AS FILEPATH
FROM 
    MEMBER M
JOIN 
    IMAGE I ON M.MEM_NO = I.REF_BNO
WHERE 
    M.NICKNAME LIKE ?
AND 
    I.IMAGE_NO = (
        SELECT MAX(IMAGE_NO) 
        FROM IMAGE 
        WHERE REF_BNO = M.MEM_NO
    )
</entry>

<entry key="followerList">
SELECT 
    M.NICKNAME, 
    I.FILE_PATH || I.CHANGE_NAME AS FILEPATH
FROM 
    MEMBER M
JOIN 
    FOLLOW F ON M.MEM_NO = F.FOLLOWING
JOIN 
    IMAGE I ON M.MEM_NO = I.REF_BNO
WHERE 
    M.NICKNAME LIKE ?
AND 
    I.IMAGE_NO = (
        SELECT MAX(IMAGE_NO) 
        FROM IMAGE 
        WHERE REF_BNO = M.MEM_NO
    )
</entry>

<entry key="selectListFollowing">
SELECT
    M.MEM_NO,
    M.NICKNAME,
    I.FILE_PATH || I.CHANGE_NAME AS FILEPATH
FROM
    MEMBER M
JOIN
    FOLLOW F ON M.MEM_NO = F.FOLLOWING
LEFT JOIN
    IMAGE I ON M.MEM_NO = I.REF_BNO
WHERE
    F.FOLLOWER = ?
    AND (I.IMAGE_NO = (
        SELECT MAX(IMAGE_NO)
        FROM IMAGE
        WHERE REF_BNO = M.MEM_NO
    ) OR I.IMAGE_NO IS NULL)
ORDER BY
    M.MEM_NO
</entry>


<entry key="selectListFollower">
SELECT 
    M.NICKNAME, M.MEM_NO,
    I.FILE_PATH || I.CHANGE_NAME AS FILEPATH
FROM 
    MEMBER M
LEFT JOIN 
    IMAGE I ON M.MEM_NO = I.REF_BNO
JOIN 
    FOLLOW F ON M.MEM_NO = F.FOLLOWER
WHERE 
    F.FOLLOWING = ?
AND 
    I.IMAGE_NO = (
        SELECT MAX(IMAGE_NO) 
        FROM IMAGE 
        WHERE REF_BNO = M.MEM_NO
    )    
ORDER BY 
    M.MEM_NO
</entry>

<entry key="findID">
	SELECT
	       MEM_ID
	     , MEM_NAME
	  FROM MEMBER
	 WHERE MEM_NAME = ?
	   AND EMAIL = ?
	   AND PHONE = ?
</entry>

<entry key="checkUserExists">
	SELECT COUNT(*) "COUNT"
	  FROM MEMBER
	 WHERE MEM_NAME = ?
	   AND MEM_ID = ?
	   AND EMAIL = ?
</entry>

<entry key="updatePassword">
	UPDATE MEMBER
	   SET MEM_PWD = ?
	 WHERE MEM_ID = ?
	   AND MEM_NAME = ?
	   AND EMAIL = ?
</entry>


</properties>
